name: Build ComfyUI Images

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      architectures:
        description: 'Architectures to build (comma-separated: sm86,sm90,sm120)'
        required: false
        default: 'sm86,sm90,sm120'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Intel SM86 - RTX 3090, RTX 3080 Ti, etc.
          - arch: sm86
            compute_capability: "8.6"
            platform: linux/amd64
            
          # Intel SM120 - RTX 5090, RTX 5080, etc.
          - arch: sm120
            compute_capability: "12.0"
            platform: linux/amd64
            
          # ARM SM90 - H100, GH200, etc.
          - arch: sm90
            compute_capability: "9.0"
            platform: linux/arm64

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch,suffix=-${{ matrix.arch }}
          type=ref,event=pr,suffix=-${{ matrix.arch }}
          type=sha,suffix=-${{ matrix.arch }}
          type=raw,value=${{ matrix.arch }},enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ matrix.platform }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          COMPUTE_CAPABILITY=${{ matrix.compute_capability }}
        cache-from: type=gha,scope=${{ matrix.arch }}
        cache-to: type=gha,mode=max,scope=${{ matrix.arch }}

  manifest:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create and push manifest
      run: |
        # Create multi-arch manifest for latest
        docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sm86 \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sm90 \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sm120